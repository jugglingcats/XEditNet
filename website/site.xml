<?xml version="1.0" encoding="utf-8"?><!DOCTYPE website SYSTEM "site.dtd"[]><?xeditnet-profile ../xenwebprofile/bin/debug/xenwebprofile.dll!XenWebProfile.ProfileImpl?><?xeditnet-style site.style?><?xeditnet-xsl site.xsl?><website><page id="index"><pagetitle>XEditNet - The WYSIWYG XML Editor for .NET</pagetitle><navtitle>Home</navtitle><pagebody><h1>About XEditNet</h1><p>XEditNet is a document-style XML editor. It provides a simple, cost effective and user friendly authoring tool for structured documents of all types.</p><p>The core of the product is XEditNetCtrl, a .NET UserControl. This is .NET managed code that can be used in other .NET applications or embedded in Microsoft Internet Explorer (for use in web forms).</p><p>See the <a href="features.html">Features</a> section for technical information about XEditNet.</p><p><b>Please note that XEditNet is currently in alpha and is not ready for production use. Download the software if you are interested in contributing to XEditNet development by providing feedback and feature requests.</b></p><p><img alt="" src="images/mainview.gif" /></p></pagebody></page><page id="features"><pagetitle>XEditNet Features</pagetitle><navtitle>Features</navtitle><pagebody><h1>Feature Summary</h1><dl><dt>WYSIWYG editing / stylesheet support</dt><dd>XEditNet presents an 'author friendly' view of an XML document rather than a technical view (tree or raw markup). See the <a href="styles.html">Stylesheet Support</a> page for more information.</dd><dt>User-friendly editing</dt><dd>XEditNet aims to provide a natural editing environment for people used to word-processing applications. See the <a href="editing.html">Editing</a> page for more information.</dd><dt>DTD validation and assist</dt><dd>XEditNet validates documents as changes are made, showing validation errors using clear visual clues. Insert and change dialogues show valid elements at a given point in the document. See <a href="validation.html">Validation</a> for more information.</dd><dt>Table support</dt><dd>XEditNet supports "semantic tables", and will have support for standard table models. <b>However, table support is very basic in the current release</b>.  See the <a>Table Support</a> section for more information.</dd><dt>.NET integration</dt><dd>XEditNet makes full use of the .NET XML APIs. Any XmlDocument object can be attached to the editor and changes can be made to the underlying document outside the editor control. External changes are immediately reflected by the editor.</dd><dt>Large document support</dt><dd>XEditNet is designed for small and large documents. Load time is quick and documents up to around 1Mb are easily handled.</dd><dt>XEditNet Author, a reference application with full source code</dt><dd>XEditNet Author is a desktop application built around XEditNetCtrl. It can be used as-is or as a basis for customisation for those people wanting to write a desktop XML editor application. It is also a good starting point for understanding the XEditNet API. See <a href="author.html">XEditNet Author</a> for more information.</dd></dl><section id="styles"><secttitle>Stylesheet Support</secttitle><p>XEditNet uses a simple XML format for defining stylesheets, similar in concept to CSS. Example stylesheets are provided with the distribution. *** Full stylesheet reference information will be provided in future releases.</p><p>The stylesheet rules define the following aspects of visual display:</p><dl><dt>Block vs. Inline</dt><dd>This is the primary classification for element presentation.</dd><dt>Margin</dt><dd>Controls the offset from parent element for block elements.</dd><dt>Font</dt><dd>Specifies font family, size and other characteristics.</dd><dt>Empty element</dt><dd>This is automatically applied for empty elements declared in a DTD. However, it is also possible to specify that other elements are displayed as empty. One example is the HTML 'a' element when the name attribute is specified.</dd><dt>Table, TableRow and TableCell</dt><dd>Indicates table structure. Note that any elements within a Table not matching a TableRow, and any elements within a TableRow not matching a TableCell are currently not displayed. Also, table column widths, rowspan and colspan are not supported. Better table support is top of the enhancement list.</dd><dt>Image</dt><dd>This release provides basic image support.</dd></dl><p>Rules are matched to elements using XPath expressions. If multiple rules match a given element, the styles are merged in the order they appear in the stylesheet. Styles are merged from the first to last matching rule and cascaded from the currently active style. This means that basic style information can be applied to named elements via one rule, and another rule with conditions can refine this in a particular context.</p><p>In the absence of any matching rules, XEditNet uses the same rules as Internet Explorer to determine whether elements should be displayed block or inline. In other words, any element with text as a sibling is treated as inline, otherwise it is treated as a block element. This makes XEditNet convenient for viewing or editing files with no stylesheet.</p><p><b>Planned Enhancements</b></p><ul><li>Better table support.</li><li>Support for foreground and background colours.</li><li>Support for right margin/padding (currently only top/bottom/left are supported).</li><li>Support for 'virtual text', for example bullets/numbering or displaying attributes.</li><li>Better image support.</li></ul></section><section id="editing"><secttitle>Editing</secttitle><p>XEditNet provides a clean and productive editing interface. Users who are familiar with XML and comfortable using keyboard shortcuts will be productive with XEditNet very quickly. Novice users will need some focused training as they would with any new tool. Some specific editing features are:</p><dl><dt>Tags on and tags off modes</dt><dd>XEditNet is intended to be used primarily in tags on mode, but it is possible to hide the tags using the <code>Ctrl+K,Ctrl+O</code> keyboard combination.</dd><dt>Document does not have to remain valid</dt><dd>Some XML editors insist that documents remain valid at all times, but it can be extremely hard to keep a document valid while making some changes. XEditNet takes the approach that any changes supported by the .NET XML API can be made, with clear indication to the user where errors occur so they can correct them. See <a href="validation.html">Validation</a> for more information.</dd><dt>Enter key splits element</dt><dd>This allows quick creation of new elements, such as paragraphs for example.</dd><dt>Quick selection</dt><dd><code>Ctrl+E</code> will progressively select element contents, parent element and so on.</dd><dt>Undo/redo support</dt><dd>XEditNet hooks into change notifications to the underlying XML document via the .NET API. Any change can be undone/redone, including changes that are made outside of the editor by API calls to the underlying document.</dd><dt>Unbalanced selections</dt><dd>XEditNet allows the selection of a start tag without corresponding end tag, which some editors prohibit. This is a more natural selection mode for many users.</dd></dl><p><b>Planned Enhancements</b></p><ul><li>Improvements to tags off mode cursor handling.</li><li>Simple mechanism to define bullet, ordered list and table structures, so that these can be made a standard part of XEditNet. Would include standard keyboard shortcuts like <code>Ctrl+B</code> for bold text.</li><li>Collapse/expand elements (outline view).</li><li>Per-user keyboard customisation</li><li>Navigation helpers, eg. find element, find id, navigate between id and idref.</li><li>Search and replace.</li><li>More control of enter key behaviour, for example to add a paragraph if between two paragraphs rather than splitting the parent element.</li><li>Drag and drop support.</li><li>Better support for unbalanced selections. For example, allowing a user to overtype a selection that spans a paragraph start tag and a paragraph end tag, ie. <code>...&lt;/p&gt;&lt;p&gt;...</code>.</li><li>Ability to dock the popup windows to the control frame.</li></ul></section><section id="validation"><secttitle>Validation</secttitle><p>XEditNet currently supports DTD validation. When a document is attached to the control, the internal and external subsets are parsed. The validation engine then hooks into change notifications for the underlying XmlDocument object. Any changes inside or outside the editor are validated and invalid nodes highlighted.</p><blockquote><div><img alt="Invalid Element Example" src="images/invalid.png" /></div></blockquote><p>The element insert popup displays all elements that can be inserted in the current context. Required elements and required choice groups are highlighted.</p><blockquote><div><img alt="Choice Example" src="images/choice.png" /></div></blockquote><p>The attribute editor popup provides realtime validation of attribute entries.</p><blockquote><div><img alt="Invalid Id Example" src="images/badid.png" /></div></blockquote><p>Text in element content is clearly shown.</p><blockquote><div><img alt="Invalid Text Example" src="images/badtext.png" /></div></blockquote><p><b>Planned Enhancements</b></p><ul><li>Better support for custom entity resolution</li><li>Quick Fix feature to suggest possible fixes to invalid structure.</li></ul></section><section id="tables"><secttitle>Tables</secttitle><p><strong>This section will be expanded as the table support improves.</strong></p><p>See the <a href="styles.html">Stylesheet</a> section for information about the current table support, and the tables sample in the installation directory.</p></section><section id="author"><secttitle>XEditNet Author</secttitle><p>Source code for this program is included in the distribution. It is a simple Windows Forms MDI application that makes use of XEditNetCtrl and demonstrates the following features:</p><ul><li>Instantiating XEditNetCtrl and attaching to XmlDocument instance</li><li>Menu merging</li><li>Handling events</li></ul><p><b>Planned Enhancements</b></p><ul><li>Toolbars.</li><li>Plugin framework for specific DTDs/schemas, for example a Preview plugin for documents that reference an XSLT stylesheet.</li></ul></section></pagebody></page><page id="faq"><pagetitle>XEditNet   FAQ</pagetitle><navtitle>FAQ</navtitle><pagebody><dl><dt>What's the difference between XEditNetCtrl and XEditNet Author?</dt><dd>XEditNetCtrl is the underlying .NET UserControl with the bulk of XML editing functionality. XEditNet Author is a 'reference application' built around the control, for which source code is provided.</dd><dt>Does XEditNet support schemas</dt><dd>Yes and no. You can validate a document that references a schema using that .NET API but there is no interactive validation of changes made within the control.</dd><dt>Can I use XEditNet as part of a web form?</dt><dd>Yes, but only within Internet Explorer. Also, because XEditNet makes use of GDI+ via P-Invoke, the assembly must be granted full trust in order to run correctly.</dd><dt>Does XEditNet require the .NET Framework Runtime?</dt><dd>Yes, all target systems must have the runtime.</dd><dt>Can I embed XEditNet in my own thick client application?</dt><dd>Yes, you can recompile XEditNet Author or develop you own applications, subject to the same licence terms as exist for XEditNet Author.</dd><dt>How is XEditNet licensed?</dt><dd>There are four licensing models<ul><li>Standalone - individual per seat licence</li><li>Enterprise - unlimited standalone licence</li><li>Server - a per server url licence (for web applications)</li><li>OEM - for embedding or licensing XEditNet with other products</li></ul>See <a href="pricing.html">Pricing</a> for more information.</dd><dt>Does XEditNet have namespace support?</dt><dd>Yes, although some considerations apply because of the limited support for namespaces in XML DTDs. For example, any element that uses a prefix must have the element defined with the same prefix in the DTD.</dd><dt>Why another XML editor?</dt><dd>XEditNet is intended as a cost effective XML editor that is easy to integrate and use in .NET projects. As far as I know there are no similar native .NET editors at this point.</dd></dl></pagebody></page><page id="news"><pagetitle>XEditNet News</pagetitle><navtitle>News</navtitle><pagebody><news id="update1"><newstitle>Updated Version</newstitle><newsdate>27 November, 2004</newsdate><newssummary>Minor fixes and additions </newssummary><newsbody><p>Added auto-open of files specified on the command line. Allowes XEditNet to act as the default editor/viewer for XML files.</p><p>Added Select All handler.</p><p>Added full version number to About and to download page.</p></newsbody></news><news id="launch"><newstitle>Alpha Release</newstitle><newsdate>21 November, 2004</newsdate><newssummary>WYSIWYG XML editor for .NET</newssummary><newsbody><p>This is a pre-production release intended to ellicit feedback from the XML community on existing and future functionality.</p></newsbody></news></pagebody></page><div class="contact"><div><a href="images/insert_element.png"><img src="images/insert_element_small.png" height="150" width="150" alt="Insert Element" style="margin: 2 2 2 2; border: 1 solid black;" /></a></div><div><a href="images/modify_attribute.png"><img src="images/modify_attribute_small.png" height="150" width="150" alt="Modify Attributes" style="margin: 2 2 2 2; border: 1 solid black;" /></a></div><div class="genbody"><br /><div>contact <a shape="rect" href="mailto:info@xeditnet.com"><b>info@xeditnet.com</b></a></div></div></div></website>